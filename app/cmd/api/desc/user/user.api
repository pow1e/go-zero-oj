syntax = "v1"

info(
    title: "user"
    desc: "用户接口"
    version : "1.0"
)

// 用户登录
type (
    UserLoginReq {
        CaptchaCode string `json:"captcha_code"` // 验证码
        UserName string `json:"username"`        // 用户名
        Password string `json:"password"`        // 密码
    }
    UserLoginResp {
        AccessToken string `json:"access_token"`
        RefreshToken string `json:"refresh_token"`
    }
)
@server(
    group: user
    prefix: /api/v1/user
)
service core-api {
    @doc "用户登录"
    @handler userLogin
    post /login (UserLoginReq) returns (UserLoginResp)
}

// 用户注册
type (
    UserRegisterReq {
        CaptchaCode string `json:"captcha_code"`         // 验证码
        UserName string `json:"username"`                // 用户名
        Password string `json:"password"`                // 密码
        ConfirmPassword string `json:"confirm_password"` // 确认密码
    }
)
@server(
    group: user
    prefix: /api/v1/user
)
service core-api {
    @doc "用户注册"
    @handler userRegister
    post /register (UserRegisterReq)
}

// 验证码获取
type CaptchaResp {
    CaptchaID string `json:"captcha_id"`     // 验证码id
    PictureData string `json:"picture_data"` // 验证码的base64
}
@server(
    group : user
    prefix : /api/v1/user
    middleware: CaptchaThrottling
)
service core-api {
    @doc "验证码"
    @handler getCaptcha
    get /captcha returns (CaptchaResp)
}


// 用户相信信息
type (
    UserDeitalReq {
        Identity string `form:"identity"`
    }
    UserDeitalResp {
        Identity string `json:"identity"`
        Name string `json:"name"`
        Phone string `json:"phone"`
        Mail string `json:"mail"`
        FinishProblemNum int32  `json:"finish_problem_num"`
        SubmitNum        int32 `json:"submit_num"`
        CreatedAt string `json:"created_at"`
        UpdatedAt string `json:"updated_at"`
        DeletedAt string `json:"deleted_at"`
    }
)
@server(
    group: user
    prefix: /api/v1/user
)
service core-api {
    @doc "根据唯一标识获取用户信息"
    @handler getUserDetail
    get / (UserDeitalReq) returns (UserDeitalResp)
}

// 用户排行榜
type (
    UserRankListReq{
        Page             int    `form:"page,default=1"`
        Size             int    `form:"size,default=10"`
        Name string    `form:"name,optional"`
    }
    UserRankListResp{
        Identity         string `json:"identity"`
        Name             string `json:"name"`
        FinishProblemNum int32 `json:"finish_problem_num"`
        SubmitNum        int32 `json:"submit_num"`
        CreatedAt        string `json:"created_at"`
    }
)
@server(
    group: user
    prefix: /api/v1/user
)
service core-api {
    @doc "根据唯一标识获取用户信息"
    @handler getUserRankList
    get /rank-list (UserRankListReq) returns ([]UserRankListResp)
}