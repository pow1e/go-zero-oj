// Code generated by goctl. DO NOT EDIT.
package types

type PageReq struct {
	Page  int64 `form:"page"  validate:"number,gte=1"  label:"页数"`
	Limit int64 `form:"limit" validate:"number,gte=1"  label:"条数"`
}

type Pagination struct {
	Page  int64 `json:"page"`
	Limit int64 `json:"limit"`
	Total int64 `json:"total"`
}

type UserLoginReq struct {
	CaptchaCode string `json:"captcha_code"` // 验证码
	UserName    string `json:"username"`     // 用户名
	Password    string `json:"password"`     // 密码
}

type UserLoginResp struct {
	AccessToken  string `json:"access_token"`
	RefreshToken string `json:"refresh_token"`
}

type UserRegisterReq struct {
	CaptchaCode     string `json:"captcha_code"`     // 验证码
	UserName        string `json:"username"`         // 用户名
	Password        string `json:"password"`         // 密码
	ConfirmPassword string `json:"confirm_password"` // 确认密码
}

type CaptchaResp struct {
	CaptchaID   string `json:"captcha_id"`   // 验证码id
	PictureData string `json:"picture_data"` // 验证码的base64
}

type UserDeitalReq struct {
	Identity string `form:"identity"`
}

type UserDeitalResp struct {
	Identity  string `form:"identity"`
	Name      string `form:"name"`
	Phone     string `form:"phone"`
	Mail      string `form:"mail"`
	CreatedAt string `form:"created_at"`
	UpdatedAt string `form:"updated_at"`
	DeletedAt string `form:"deleted_at"`
}

type ProblemCategory struct {
	ID        string `form:"id"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt string `json:"deleted_at"`
}

type Category struct {
	Identity  string `json:"identity"`
	Name      string `json:"name"`
	ParentId  int32  `json:"parent_id"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt string `json:"deleted_at"`
}

type Problem struct {
	Identity   string     `json:"identity"`
	Title      string     `json:"title"`
	MaxRuntime int32      `json:"max_runtime"`
	MaxMem     int32      `json:"max_mem"`
	Content    string     `json:"content"`
	Category   []Category `json:"category"`
	CreatedAt  string     `json:"created_at"`
	UpdatedAt  string     `json:"updated_at"`
	DeletedAt  string     `json:"deleted_at"`
}

type ProblemPageReq struct {
	Page             int    `form:"page,default=1"`
	Size             int    `form:"size,default=10"`
	KeyWord          string `form:"keyword,optional"`
	CategoryIdentity string `form:"category_identity,optional"` // 分类唯一标识
}

type ProblemListResp struct {
	Count       int64     `json:"count"`
	ProblemList []Problem `json:"problemList"`
}

type ProblemDeitalReq struct {
	Identity string `form:"identity"`
}

type ProblemDeitalResp struct {
	Problem Problem `json:"problem"`
}

type Submit struct {
	Identity  string `json:"submit_identity"`
	Status    int32  `json:"status"`
	Language  int32  `json:"language"`
	RunTime   int32  `json:"run_time"`
	RunMem    int32  `json:"run_mem"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt string `json:"deleted_at"`
}

type SubmitListReq struct {
	Page            int    `form:"page,default=1"`
	Size            int    `form:"size,default=10"`
	ProblemIdentity string `form:"problem_identity,optional"`
	UserIdentity    string `form:"user_identity,optional"`
	Language        int32  `form:"language,optional" validate:"omitempty,oneof=1 2 3 4 5" label:"语言"`
	Status          int32  `form:"status,optional" validate:"omitempty,oneof=-1 1 2 3 4" label:"状态"`
}

type SubmitListResp struct {
	Count      int64    `json:"count"`
	SubmitList []Submit `json:"submitList"`
}
